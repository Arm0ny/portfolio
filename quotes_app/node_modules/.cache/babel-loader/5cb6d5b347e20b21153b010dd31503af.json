{"ast":null,"code":"import _classCallCheck from\"/var/www/html/portfolio/quotes_app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/var/www/html/portfolio/quotes_app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/var/www/html/portfolio/quotes_app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/var/www/html/portfolio/quotes_app/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/var/www/html/portfolio/quotes_app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from\"react\";import LineIcon from\"react-lineicons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var QuotesComponent=/*#__PURE__*/function(_React$Component){_inherits(QuotesComponent,_React$Component);var _super=_createSuper(QuotesComponent);function QuotesComponent(props){var _this;_classCallCheck(this,QuotesComponent);_this=_super.call(this,props);_this.state={quote:'Water is Wet...',author:'totallyNotAPoet',twitLink:''};_this.getQuotes=_this.getQuotes.bind(_assertThisInitialized(_this));return _this;}_createClass(QuotesComponent,[{key:\"getQuotes\",value:function getQuotes(){var _this2=this;fetch('https://programming-quotes-api.herokuapp.com/quotes/random').then(function(res){return res.json();}).then(function(json){_this2.setState({quote:json.en,author:json.author,twitLink:'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text='+encodeURIComponent('\"'+json.en+'\" '+json.author)});});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"article\",{id:\"quotes_article\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"quotes_div\",children:[/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{id:\"li1\"}),/*#__PURE__*/_jsx(\"li\",{id:\"li2\"}),/*#__PURE__*/_jsx(\"li\",{id:\"li3\"})]}),/*#__PURE__*/_jsxs(\"p\",{id:\"quote\",children:[\"Computer-:Programming_quotes$    \",this.state.quote]}),/*#__PURE__*/_jsxs(\"div\",{id:\"quote_bottom\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"author\",children:this.state.author}),/*#__PURE__*/_jsxs(\"a\",{href:this.state.twitLink,id:\"tweet-quote\",target:\"_top\",children:[\"Tweet me! \",/*#__PURE__*/_jsx(LineIcon,{name:\"twitter-original\"})]})]})]}),/*#__PURE__*/_jsx(\"button\",{id:\"get_button\",onClick:this.getQuotes,children:\"Get Quote\"})]});}}]);return QuotesComponent;}(React.Component);","map":{"version":3,"names":["React","LineIcon","QuotesComponent","props","state","quote","author","twitLink","getQuotes","bind","fetch","then","res","json","setState","en","encodeURIComponent","Component"],"sources":["/var/www/html/portfolio/quotes_app/src/Components/QuotesComponent.js"],"sourcesContent":["import React from \"react\";\nimport LineIcon from \"react-lineicons\";\nexport class QuotesComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            quote: 'Water is Wet...',\n            author: 'totallyNotAPoet',\n            twitLink : ''\n        }\n        this.getQuotes = this.getQuotes.bind(this);\n    }\n\n    getQuotes(){\n        fetch('https://programming-quotes-api.herokuapp.com/quotes/random')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    quote: json.en,\n                    author: json.author,\n                    twitLink: 'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' +\n                        encodeURIComponent('\"' + json.en + '\" ' + json.author)\n                });\n            });\n    }\n\n    render(){\n        return (\n            <article id='quotes_article'>\n                <div id='quotes_div'>\n                    <ul>\n                        <li id='li1'></li>\n                        <li id='li2'></li>\n                        <li id='li3'></li>\n                    </ul>\n                    <p id='quote'>Computer-:Programming_quotes$    {this.state.quote}</p>\n                    <div id='quote_bottom'>\n                        <p id='author'>{this.state.author}</p>\n                        <a href={this.state.twitLink} id='tweet-quote' target='_top'>Tweet me! <LineIcon name=\"twitter-original\"/></a>\n                    </div>\n                </div>\n                <button id='get_button' onClick={this.getQuotes}>Get Quote</button>\n            </article>\n\n\n        )\n    }\n\n}\n\n\n\n"],"mappings":"wlBAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,SAAP,KAAqB,iBAArB,C,wFACA,UAAaC,gBAAb,8HACI,yBAAYC,KAAZ,CAAkB,iDACd,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,KAAK,CAAE,iBADE,CAETC,MAAM,CAAE,iBAFC,CAGTC,QAAQ,CAAG,EAHF,CAAb,CAKA,MAAKC,SAAL,CAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB,CAPc,aAQjB,CATL,qDAWI,oBAAW,iBACPC,KAAK,CAAC,4DAAD,CAAL,CACKC,IADL,CACU,SAAAC,GAAG,QAAIA,IAAG,CAACC,IAAJ,EAAJ,EADb,EAEKF,IAFL,CAEU,SAAAE,IAAI,CAAI,CACV,MAAI,CAACC,QAAL,CAAc,CACVT,KAAK,CAAEQ,IAAI,CAACE,EADF,CAEVT,MAAM,CAAEO,IAAI,CAACP,MAFH,CAGVC,QAAQ,CAAE,8EACNS,kBAAkB,CAAC,IAAMH,IAAI,CAACE,EAAX,CAAgB,IAAhB,CAAuBF,IAAI,CAACP,MAA7B,CAJZ,CAAd,EAMH,CATL,EAUH,CAtBL,sBAwBI,iBAAQ,CACJ,mBACI,iBAAS,EAAE,CAAC,gBAAZ,wBACI,aAAK,EAAE,CAAC,YAAR,wBACI,mCACI,WAAI,EAAE,CAAC,KAAP,EADJ,cAEI,WAAI,EAAE,CAAC,KAAP,EAFJ,cAGI,WAAI,EAAE,CAAC,KAAP,EAHJ,GADJ,cAMI,WAAG,EAAE,CAAC,OAAN,+CAAgD,KAAKF,KAAL,CAAWC,KAA3D,GANJ,cAOI,aAAK,EAAE,CAAC,cAAR,wBACI,UAAG,EAAE,CAAC,QAAN,UAAgB,KAAKD,KAAL,CAAWE,MAA3B,EADJ,cAEI,WAAG,IAAI,CAAE,KAAKF,KAAL,CAAWG,QAApB,CAA8B,EAAE,CAAC,aAAjC,CAA+C,MAAM,CAAC,MAAtD,qCAAuE,KAAC,QAAD,EAAU,IAAI,CAAC,kBAAf,EAAvE,GAFJ,GAPJ,GADJ,cAaI,eAAQ,EAAE,CAAC,YAAX,CAAwB,OAAO,CAAE,KAAKC,SAAtC,uBAbJ,GADJ,CAmBH,CA5CL,6BAAqCR,KAAK,CAACiB,SAA3C"},"metadata":{},"sourceType":"module"}